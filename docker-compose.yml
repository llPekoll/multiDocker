version: '3'

services:
#    db_node_domain:
#      image: mysql:5.7
#      volumes:
#        - db_data:/var/lib/mysql
#      restart: always
#      environment:
#        MYSQL_ROOT_PASSWORD: PASSWORD
#        MYSQL_DATABASE: wordpress
#        MYSQL_USER: wordpress
#        MYSQL_PASSWORD: PASSWORD
#      container_name: wordpress_db

#    wordpress:
#      depends_on:
#        - db_node_domain
#      image: wordpress:latest
#      expose:
#        - 80
#      restart: always
#      environment:
#        VIRTUAL_HOST: blog.DOMAIN.TLD
#        WORDPRESS_DB_HOST: db_node_domain:3306
#        WORDPRESS_DB_USER: wordpress
#        WORDPRESS_DB_PASSWORD: PASSWORD
#      container_name: wordpress
# volumes:
#     db_data:
  myimage1:
    build: ./testdocker1
    container_name: myimage1
    expose:
      - 8081
  
  myimage2:
    build: ./testdocker2
    container_name: myimage2
    expose:
      - 8082

  nginx: 
    build: nginx-proxy
    container_name: production_nginx
    # volumes:
    #   - ./nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/error.log:/etc/nginx/error_log.log
      # - ./nginx/cache/:/etc/nginx/cache
      # - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - 8000:80
      - 443:443


  # ismydependencysafe:
  #   image: ismydependencysafe:latest
  #   container_name: production_ismydependencysafe
  #   expose:
  #     - "80"
  #   networks:
  #     - my-network-name
networks:
  my-network-name:

volumes:
  certificates:

#   nginx-proxy:
#     image: jwilder/nginx-proxy
#     container_name: nginx-proxy
#     ports:
#       - "8000:80"
#     volumes:
#       - /var/run/docker.sock:/tmp/docker.sock:ro

# networks:
#   default:
#     external:
#       name: nginx-proxy